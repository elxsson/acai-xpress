openapi: 3.0.0
info:
  title: Acai-Express API
  description: API para o sistema de pedidos online de açaí
  version: 1.0.0
paths:
  /api/register:
    post:
      summary: Registro de usuário
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRegister'
      responses:
        '201':
          description: Usuário registrado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
        '400':
          description: Dados inválidos ou erro na validação
        '422':
          description: Erro de validação de dados

  /api/login:
    post:
      summary: Login de usuário
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserLogin'
      responses:
        '200':
          description: Login realizado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
        '401':
          description: Credenciais inválidas
        '422':
          description: Erro de validação de dados

  /api/orders:
    get:
      summary: Listar pedidos do usuário
      tags:
        - Orders
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Lista de pedidos do usuário
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
        '401':
          description: Não autorizado

    post:
      summary: Criar novo pedido
      tags:
        - Orders
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderCreate'
      responses:
        '201':
          description: Pedido criado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '400':
          description: Erro de validação de dados
        '422':
          description: Erro de validação de dados

  /api/orders/{orderId}:
    get:
      summary: Obter detalhes do pedido
      tags:
        - Orders
      security:
        - bearerAuth: []
      parameters:
        - name: orderId
          in: path
          required: true
          description: ID do pedido
          schema:
            type: integer
            example: 1
      responses:
        '200':
          description: Detalhes do pedido
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '404':
          description: Pedido não encontrado

    delete:
      summary: Cancelar pedido
      tags:
        - Orders
      security:
        - bearerAuth: []
      parameters:
        - name: orderId
          in: path
          required: true
          description: ID do pedido
          schema:
            type: integer
            example: 1
      responses:
        '200':
          description: Pedido cancelado com sucesso
        '404':
          description: Pedido não encontrado

  /api/products:
    get:
      summary: Listar todos os produtos
      tags:
        - Products
      responses:
        '200':
          description: Lista de produtos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
          
    post:
      summary: Adicionar novo produto (admin)
      tags:
        - Products
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductCreate'
      responses:
        '201':
          description: Produto criado com sucesso
        '400':
          description: Erro de validação de dados

  /api/products/{productId}:
    get:
      summary: Obter detalhes de um produto
      tags:
        - Products
      parameters:
        - name: productId
          in: path
          required: true
          description: ID do produto
          schema:
            type: integer
            example: 1
      responses:
        '200':
          description: Detalhes do produto
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '404':
          description: Produto não encontrado

    put:
      summary: Atualizar produto (admin)
      tags:
        - Products
      security:
        - bearerAuth: []
      parameters:
        - name: productId
          in: path
          required: true
          description: ID do produto
          schema:
            type: integer
            example: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductCreate'
      responses:
        '200':
          description: Produto atualizado com sucesso
        '404':
          description: Produto não encontrado
        '401':
          description: Acesso não autorizado

  /api/orders/{orderId}/items:
    get:
      summary: Listar itens de um pedido
      tags:
        - OrderItems
      security:
        - bearerAuth: []
      parameters:
        - name: orderId
          in: path
          required: true
          description: ID do pedido
          schema:
            type: integer
            example: 1
      responses:
        '200':
          description: Lista de itens do pedido
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderItem'
        '404':
          description: Pedido não encontrado

    post:
      summary: Adicionar item ao pedido
      tags:
        - OrderItems
      security:
        - bearerAuth: []
      parameters:
        - name: orderId
          in: path
          required: true
          description: ID do pedido
          schema:
            type: integer
            example: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderItem'
      responses:
        '201':
          description: Item adicionado com sucesso
        '404':
          description: Pedido não encontrado

    put:
      summary: Atualizar item do pedido
      tags:
        - OrderItems
      security:
        - bearerAuth: []
      parameters:
        - name: orderId
          in: path
          required: true
          description: ID do pedido
          schema:
            type: integer
            example: 1
        - name: itemId
          in: path
          required: true
          description: ID do item
          schema:
            type: integer
            example: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderItem'
      responses:
        '200':
          description: Item atualizado com sucesso
        '404':
          description: Item ou pedido não encontrado

    delete:
      summary: Remover item do pedido
      tags:
        - OrderItems
      security:
        - bearerAuth: []
      parameters:
        - name: orderId
          in: path
          required: true
          description: ID do pedido
          schema:
            type: integer
            example: 1
        - name: itemId
          in: path
          required: true
          description: ID do item
          schema:
            type: integer
            example: 1
      responses:
        '200':
          description: Item removido com sucesso
        '404':
          description: Item ou pedido não encontrado

  /api/orders/{orderId}/comments:
    get:
      summary: Listar comentários de um pedido
      tags:
        - Comments
      security:
        - bearerAuth: []
      parameters:
        - name: orderId
          in: path
          required: true
          description: ID do pedido
          schema:
            type: integer
            example: 1
      responses:
        '200':
          description: Lista de comentários do pedido
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Comment'
        '404':
          description: Pedido não encontrado

    post:
      summary: Adicionar comentário ao pedido
      tags:
        - Comments
      security:
        - bearerAuth: []
      parameters:
        - name: orderId
          in: path
          required: true
          description: ID do pedido
          schema:
            type: integer
            example: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommentCreate'
      responses:
        '201':
          description: Comentário adicionado com sucesso
        '404':
          description: Pedido não encontrado

    delete:
      summary: Remover comentário
      tags:
        - Comments
      security:
        - bearerAuth: []
      parameters:
        - name: orderId
          in: path
          required: true
          description: ID do pedido
          schema:
            type: integer
            example: 1
        - name: commentId
          in: path
          required: true
          description: ID do comentário
          schema:
            type: integer
            example: 1
      responses:
        '200':
          description: Comentário removido com sucesso
        '404':
          description: Comentário ou pedido não encontrado

components:
  schemas:
    UserRegister:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        password:
          type: string
    UserLogin:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
    LoginResponse:
      type: object
      properties:
        access_token:
          type: string
    MessageResponse:
      type: object
      properties:
        message:
          type: string
    Order:
      type: object
      properties:
        id:
          type: integer
        status:
          type: string
        total_price:
          type: number
          format: float
    OrderCreate:
      type: object
      properties:
        products:
          type: array
          items:
            type: integer
    OrderItem:
      type: object
      properties:
        product_id:
          type: integer
        quantity:
          type: integer
    Product:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
        price:
          type: number
          format: float
    ProductCreate:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        price:
          type: number
          format: float
    Comment:
      type: object
      properties:
        id:
          type: integer
        content:
          type: string
        created_at:
          type: string
          format: date-time
    CommentCreate:
      type: object
      properties:
        content:
          type: string
